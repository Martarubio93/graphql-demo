type Query {
  me: User
  cart: Cart
  dataContent(id: Int, name: String): [DataContent]
  products(id: Int, type: String): [Product]
}

type User {
  id: ID
  name: String
  email: String
}

type Cart {
  id: Int
  quantity: Int
  total: Float
}

type DataContent {
  id: Int
  name: String
  copy: String
  description: String
}

type Product {
  id: Int
  type: String
  price: String
  colour: String
  size: String
}

# Multiple Mutation to create new product, accept arguments for type, price, colour and size. Return 'Product' the new product.
# Mutation to update the price of a product, accept arguments for id and price. Return 'Product' the updated product.
type Mutation {
  createProduct(type: String!, price: String!, colour: String!, size: String): Product
  updateProductPrice(id: Int!, price: String!): Product
}